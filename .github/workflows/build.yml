name: Create and publish a Docker image

on:
  push:
    branches: [ 'master', 'feature/**', 'release' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  notify:
    name: Notify on Slack
    runs-on: ubuntu-latest
    needs: [build-and-push-image]
    steps:
      - name: Report Status
        uses: ravsamhq/notify-slack-action@v1
        if: always()
        with:
          status: ${{ job.status }}
          # mention tairov
          mention_users: 'U1C8D34HL'
          mention_users_when: 'failure,warnings'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required


  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.9 ]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev

      # return zero exit code, just to collect recommendations from linters
      - name: Run pylint & flake8
        run: |
          pipenv run pylint --output-format=parseable --reports=no src/ --exit-zero
          pipenv run flake8 --exit-zero src/ tests

      - name: Run unit tests
        run: |
          pipenv run scripts/run_tests.sh

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: "."
          file: ./docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

